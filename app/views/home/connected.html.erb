<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZnvqy9HEpG-LAQwm_AxDOegMciI9jgP4&libraries=geometry&sensor=false"></script>
<script type="text/javascript" src="intersections_data.txt"></script>
<script type="text/javascript" src="intersections_cam.txt"></script>
<script type="text/javascript">





var map;
var mapCenter = new google.maps.LatLng(42.365551,-71.103911);
var directionsService = new google.maps.DirectionsService();
var cellInfo;

function initialize() {
      

      

      var map = new google.maps.Map(document.getElementById("map_canvas"), {
        zoom: 15,
        center: mapCenter,
        mapTypeId: google.maps.MapTypeId.ROAD
      });


      var styles = [
        {
          "stylers": [
            { "visibility": "simplified" },
            { "hue": "#00b2ff" },
            { "weight": 0.5 },
            { "saturation": -51 },
            { "gamma": 1.26 },
            { "lightness": 100 }
          ]
        }
      ]
      map.setOptions({styles: styles});

      //console.log("data length = "+ CDataPop.length);

    var circle;
    for (var i in data){
      
      circle = new google.maps.Circle({
            strokeColor: 'red',
            strokeOpacity: data[i].value,
            strokeWeight: 2,
            fillColor: 'red',
            fillOpacity: data[i].value,
            map: map,
            center: data[i].center,
            radius:25
        });
    }

    var gridCircle;
    cellInfo = [];
    for (var i in grid){
      
      // gridCircle = new google.maps.Circle({
      //       strokeColor: 'blue',
      //       strokeOpacity:1.0,
      //       strokeWeight: 2,
      //       fillColor: 'blue',
      //       fillOpacity: 1.0,
      //       map: map,
      //       center: grid[i].center,
      //       radius:20
      //   }); 
      cellInfo.push(grid[i].center)


    }


    //console.log("HERE");
    var origin; var i1=0;
    var destination; var i2 = 1;
    

    caller();

      
    
    function caller(){
        
        
          origin = cellInfo[i1];
          destination = cellInfo[i2];
          
          if (i1 <= cellInfo.length  && i2 <= cellInfo.length){
            console.log(" i1, i2 " + i1 + ","+ i2 +" drawing "  + origin + " , " + destination);
            setTimeout(drawRoute,2000);
          }
        
       }
      


      

      function drawRoute(){

        var request = {
                origin: origin,
                destination:destination,
                travelMode: google.maps.DirectionsTravelMode.BICYCLING
            };
          
            var rendererOptions = {
                preserveViewport: true,
                suppressMarkers:true,
                routeIndex: i1 + i2                
            };


            directionsService.route(request, function(response,status){
              if (status == google.maps.DirectionsStatus.OK){
                var polylineOptionsActual = new google.maps.Polyline({
                  strokeColor: 'blue',
                  strokeOpacity: 0.2,
                  strokeWeight: 2
                });

                
                directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
                directionsDisplay.setMap(map);
                directionsDisplay.setOptions({polylineOptions: polylineOptionsActual});
                directionsDisplay.setDirections(response);

                if (i1 < cellInfo.length-1){
                  i1+=1;
                }
          
                if (i1 == cellInfo.length -1 && i2 <= cellInfo.length-1){
                  i2+=1;
                }
          
              } else {

                console.log("STATUS=" + status);
              }
            });
            
            if (i1 == cellInfo.length && i2 == cellInfo.length){
              console.log("done!");
            } else {
              console.log(" here now " + i1 + ", " + i2);
              caller();
              
            }
      }


}


google.maps.event.addDomListener(window, 'load', initialize);



</script>



</head>


<body>
  <h1 align="center"> Connectedness </h1>
  <div id="map_canvas" style="width:100%; height:1000px;"></div>