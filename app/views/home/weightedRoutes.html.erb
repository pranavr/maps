<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZnvqy9HEpG-LAQwm_AxDOegMciI9jgP4&libraries=geometry&sensor=false"></script>
<script type="text/javascript" src="/Cambridge_P_formatted.js"></script>
<script type="text/javascript">



var map;
var directionsService = new google.maps.DirectionsService();
function initialize() {
      
var map;
var mapCenter = new google.maps.LatLng(42.365551,-71.103911);
var directionsService = new google.maps.DirectionsService();

      var map = new google.maps.Map(document.getElementById("map_canvas"), {
        zoom: 15,
        center: mapCenter,
        mapTypeId: google.maps.MapTypeId.ROAD
      });


      var styles = [
        {
          "stylers": [
            { "visibility": "simplified" },
            { "hue": "#00b2ff" },
            { "weight": 0.5 },
            { "saturation": -51 },
            { "gamma": 1.26 },
            { "lightness": 100 }
          ]
        }
      ]
      map.setOptions({styles: styles});

      //console.log("data length = "+ CDataPop.length);

     var circle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FFFFFF',
            fillOpacity: 0.35,
            map: map,
            center: new google.maps.LatLng(42.365551,-71.103911),
            radius: 2000
        });

      //var circle = new google.maps.Circle(circleOptions);

      var points  = [];

      for (var i = 0; i < CDataPop.length; i++){

        var point = new google.maps.LatLng(CDataPop[i].lat, CDataPop[i].lng);
        

        if (circle.getBounds().contains(point)){

          points.push(CDataPop[i]);
        }
      }                                                                                                         
     // console.log("in sector = " + points.length);


      var circles2;

      var filter = [];
      for (var j =0; j<points.length; j = j + 5){
        //console.log("val = " + points[j].count);

        if (j < points.length){
            filter.push(points[j]);

        }

      }

      var selected = [];
      for (var i = 0; i<filter.length -2; i = i+2){
        var pointA = new google.maps.LatLng(filter[i].lat, filter[i].lng);
        var pointB = new google.maps.LatLng(filter[i+1].lat, filter[i+1].lng);
        if (google.maps.geometry.spherical.computeDistanceBetween(pointA, pointB)>= 500){
          selected.push(filter[i]);
        }
      }

      var radii = [];

      for (var j = 0; j< selected.length; j++){
        var circle2Options = {
              strokeColor: 'blue',
              strokeOpacity: 0.35,
              strokeWeight: 2,
              fillColor: 'blue',
              fillOpacity: 0.35,
              map: map,
              center: new google.maps.LatLng(selected[j].lat, selected[j].lng),
              radius: Math.round(Math.sqrt(selected[j].count))
            }
            circles2 = new google.maps.Circle(circle2Options);
        radii.push(Math.round(Math.sqrt(selected[j].count)));
        console.log("rad =  " + Math.round(Math.sqrt(selected[j].count)));
      }
      


      console.log('r = '  + radii);
      var p=0;
      caller();



      function caller(){
        if (p < selected.length){
          setTimeout(drawRoute,5000);
          console.log("p " + p);
        } else {
          console.log("Out of P!");
        }
      }

      
            
      
      

      function drawRoute(){

        var request = {
                origin: new google.maps.LatLng(selected[p].lat, selected[p].lng),
                destination:mapCenter,
                travelMode: google.maps.DirectionsTravelMode.WALKING
            };
          
            var rendererOptions = {
                preserveViewport: true,
                suppressMarkers:true,
                routeIndex:p
            };


            directionsService.route(request, function(response,status){
              if (status == google.maps.DirectionsStatus.OK){
                var polylineOptionsActual = new google.maps.Polyline({
                  strokeColor: 'blue',
                  strokeOpacity: 0.05,
                  strokeWeight: radii[p]
                });

                console.log( p + "   " + radii[p]+ "   " +  radii[p]);
                directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
                directionsDisplay.setMap(map);
                directionsDisplay.setOptions({polylineOptions: polylineOptionsActual});
                directionsDisplay.setDirections(response);

                p++;
              } else {

                console.log("STATUS=" + status);
              }
            });
            
            if (p == selected.length){
              console.log("done!");
            } else {
              
              caller();
            }
      }



      // var cellCenter;

      // //console.log("s size"  + selected[3].lat);

      // for (var p =0; p < selected.length ; p++){

      //       var point = selected[p];
      //       var pointCenter = new google.maps.LatLng(point.lat, point.lng);
      //       var dim = Math.round(point.count);
      //       var half_width = dim/2;
      //       var half_height = dim/2;
      //       var cellwidth = point.count/4;
      //       var distFromCenter = Math.sqrt(Math.pow(half_width*cellwidth,2) + Math.pow(half_height*cellwidth, 2));
      //       NW = google.maps.geometry.spherical.computeOffset(pointCenter, distFromCenter,315);
      //       NS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,90);
      //       SS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,180);
      //       console.log("point  = " + p);
      //       console.log("dim = " + Math.round(point.count/10));

      //           for(var i=0; i < Math.round(point.count/10); i++){
              
      //           NE = google.maps.geometry.spherical.computeOffset(NS,i*cellwidth,180)
      //           SW = google.maps.geometry.spherical.computeOffset(SS,i*cellwidth,180)

      //                 for(var j=0; j < Math.round(point.count/10) ; j++){
                        
      //                   cellCenter = google.maps.geometry.spherical.computeOffset(NE,(Math.sqrt(2) *cellwidth)/2, 225);
                        
      //                   drawCircle(cellCenter);
      //                   //console.log("call to draw " +  i + " " + j);

      //                   var SW = google.maps.geometry.spherical.computeOffset(SW,cellwidth,90)
      //                   var NE = google.maps.geometry.spherical.computeOffset(NE,cellwidth,90)
      //                 }
      //         }
        
      // }

      // var circle3Options;
      // var gridCircles;
      // function drawCircle(){
      //   var circle3Options = {
      //         strokeColor: 'black',
      //         strokeOpacity: 0.8,
      //         strokeWeight: 2,
      //         fillColor: 'black',
      //         fillOpacity: 0.35,
      //         map: map,
      //         center: cellCenter,
      //         radius: 5
      //       }
      //       gridCircles= new google.maps.Circle(circle3Options);

      // }

}

google.maps.event.addDomListener(window, 'load', initialize);



</script>



</head>


<body>
  <h1 align="center"> Population Weighted Routes </h1>
  <div id="map_canvas" style="width:100%; height:1000px;"></div>