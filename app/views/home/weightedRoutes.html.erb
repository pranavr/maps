<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZnvqy9HEpG-LAQwm_AxDOegMciI9jgP4&libraries=geometry&sensor=false"></script>
<script type="text/javascript" src="/Cambridge_P_formatted.js"></script>
<script type="text/javascript">



//var map;
//var directionsService = new google.maps.DirectionsService();

var cellInfo;
var allStations = ['kendall','harvard', 'central', 'porter'];
var currentStation; var sIndex= 0;
var currentIndex = 0;
var centers = {
  'central' : new google.maps.LatLng(42.365551,-71.103911),
  'kendall' : new google.maps.LatLng(42.362817,-71.090225),
  'harvard' : new google.maps.LatLng(42.373447,-71.118991),
  'porter' : new google.maps.LatLng(42.38879,-71.119257)
};

var map;
var mapCenter = new google.maps.LatLng(42.365551,-71.103911);
var directionsService = new google.maps.DirectionsService();


function initialize() {
      



var stations = {
  'central' : new google.maps.LatLng(42.365551,-71.103911),
  'kendall' : new google.maps.LatLng(42.365899,-71.090505),
  'harvard' : new google.maps.LatLng(42.374776,-71.118314),
  'porter' : new google.maps.LatLng(42.391387,-71.132047)
}


 var sectorCircles;

      var sectors = {
        'harvard': null,
        'central': null,
        'kendall' : null,
        'porter' : null
      };

      for (var station in stations){
        var color;
        if (station == 'kendall'){
          color = 'grey';
        } else if (station == 'central'){
          color = 'black';
        } else if (station =='harvard'){
          color = 'red';
        } else {
          color = 'green';
        }

        sectorCircles = new google.maps.Circle({
          strokeColor: color,
          strokeOpacity: 0.8,
          strokeWeight: 10,
          fillColor: color,
          fillOpacity: 0.0,
          map: map,
          center: stations[station],
          radius: 1000
        });

        sectors[station] = sectorCircles;
      }





      var map = new google.maps.Map(document.getElementById("map_canvas"), {
        zoom: 15,
        center: mapCenter,
        mapTypeId: google.maps.MapTypeId.ROAD
      });


      var styles = [
        {
          "stylers": [
            { "visibility": "simplified" },
            { "hue": "#00b2ff" },
            { "weight": 0.5 },
            { "saturation": -51 },
            { "gamma": 1.26 },
            { "lightness": 100 }
          ]
        }
      ]
      map.setOptions({styles: styles});

      //console.log("data length = "+ CDataPop.length);

     var circle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0,
            strokeWeight: 0,
            fillColor: '#FFFFFF',
            fillOpacity: 0,
            map: map,
            center: new google.maps.LatLng(42.365551,-71.103911),
            radius: 2000
        });

      //var circle = new google.maps.Circle(circleOptions);

      var points  = [];

      var sectorPoints = {
        'kendall' : [],
        'central' : [],
        'porter' : [],
        'harvard' : []
      };


      var max = 0;

      for (var i = 0; i < CDataPop.length; i++){

        var point = new google.maps.LatLng(CDataPop[i].lat, CDataPop[i].lng);

        for (var station in sectors){
          if (sectors[station].getBounds().contains(point)){
            sectorPoints[station].push(CDataPop[i]);
          }
        } 

        if (CDataPop[i].count >= max){
          max = CDataPop[i].count;
        }
        
        points.push(CDataPop[i]);

        // if (circle.getBounds().contains(point)){

        //   points.push(CDataPop[i]);
        // }
      }                                                                                                         
     // console.log("in sector = " + points.length);


      var circles2;

      var filter = [];
      for (var j =0; j<points.length; j++){
        //console.log("val = " + points[j].count);

        if (j < points.length){
            filter.push(points[j]);

        }

      }

      var selected = [];
      for (var i = 0; i<filter.length; i++){
        //var pointA = new google.maps.LatLng(filter[i].lat, filter[i].lng);
        //var pointB = new google.maps.LatLng(filter[i+1].lat, filter[i+1].lng);
        // if (google.maps.geometry.spherical.computeDistanceBetween(pointA, pointB)>= 500){
        //   selected.push(filter[i]);
        //   selected.push(filter[i+1]);
        // }
        selected.push(filter[i]);
      }

      var radii = [];

      for (var j = 0; j< selected.length; j++){
        // var circle2Options = {
        //       strokeColor: 'blue',
        //       strokeOpacity: 0,
        //       strokeWeight: 0,
        //       fillColor: 'blue',
        //       fillOpacity: 0,
        //       map: map,
        //       center: new google.maps.LatLng(selected[j].lat, selected[j].lng),
        //       radius: Math.round(Math.sqrt(selected[j].count))
        //     }
        //     circles2 = new google.maps.Circle(circle2Options);
        radii.push(Math.round(Math.sqrt(selected[j].count)));
        //console.log("rad =  " + Math.round(Math.sqrt(selected[j].count)));
      }
      
     





      //var circle3Options;
      var gridCircles;
      var gridCircles2;

      cellInfo = {
        'kendall' : [],
        'central' : [],
        'porter' : [],
        'harvard' : []
      }
      
      for (var station in stations){
        //console.log(stations[station]);
        

        
            var pointCenter = stations[station];
            var dim = 2000;
            var half_width = dim/2;
            var half_height = dim/2;
            var cellwidth = 200;
            var distFromCenter = Math.sqrt(Math.pow(half_width,2) + Math.pow(half_height, 2));
            NW = google.maps.geometry.spherical.computeOffset(pointCenter, distFromCenter,315);
            NS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,90);
            SS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,180);

            var numCells = Math.round(dim/cellwidth);

            for(var i=0; i < numCells; i++){
              
                NE = google.maps.geometry.spherical.computeOffset(NS,i*cellwidth,180)
                SW = google.maps.geometry.spherical.computeOffset(SS,i*cellwidth,180)

                      for(var j=0; j < numCells ; j++){
                        
                        var cellCenter = google.maps.geometry.spherical.computeOffset(NE,(Math.sqrt(2) *cellwidth)/2, 225);

                        
                        //console.log(cellCenter);

                  
                        // gridCircles  =  new google.maps.Circle({
                        //         strokeColor: color,
                        //         strokeOpacity: 0,
                        //         strokeWeight: 0,
                        //         fillColor: color,
                        //         fillOpacity: 0,
                        //         map: map,
                        //         center: cellCenter,
                        //         radius: 10
                        //   });

                        var sum = 0;
                        var count = 0;
                        for (pt in sectorPoints[station]){
                          var ptLtLg = new google.maps.LatLng(sectorPoints[station][pt].lat, sectorPoints[station][pt].lng);
                          //console.log("pt = " + sectorPoints[station][pt].lat);
                          if (gridCircles.getBounds().contains(ptLtLg)){
                            //console.log("inside Circle");
                            sum+= sectorPoints[station][pt].count;
                            count++;
                          }
                        }

                        

                        var avg 
                        if (count != 0){
                          avg = sum/count;
                          avg = avg/max;
                        } else {
                          avg = 0.05;
                        }
                        
                        var info = [cellCenter, avg];

                        //console.log("sum " + sum + " count = " + count + " avg  =" + avg);
                        cellInfo[station].push(info);

                        // var gridCircles2  =  new google.maps.Circle({
                        //         strokeColor: color,
                        //         strokeOpacity: 0,
                        //         strokeWeight: 0,
                        //         fillColor: color,
                        //         fillOpacity: 0,
                        //         map: map,
                        //         center: cellCenter,
                        //         radius: 10
                        //   });
                              
                        //gridCircles= new google.maps.Circle(circle3Options);

                        
                        //console.log(gridCircles);
                        

                        var SW = google.maps.geometry.spherical.computeOffset(SW,cellwidth,90)
                        var NE = google.maps.geometry.spherical.computeOffset(NE,cellwidth,90)
                      }
              }


      }


      //console.log(cellInfo);

      //console.log('r = '  + radii);
      //var p=0;


      // var allStations = ['kendall','harvard', 'central', 'porter'];
      // var currentStation; var sIndex= 0;
      // var currentIndex = 0;
      caller();



      function caller(){
        if (sIndex <= 3) {
          currentStation = allStations[sIndex];
          //console.log("here " + currentStation);
          if ( currentIndex < cellInfo[currentStation].length -1){
            

            console.log("current Station = " + currentStation + " current Index = " + currentIndex);

            setTimeout(drawRoute,5000);
          } else {
            sIndex++;
            currentIndex = 0;
            caller();
          }
        }
          
        }
        
      

      
            
      
      

      function drawRoute(){

        var request = {
                origin: cellInfo[currentStation][currentIndex][0],
                destination:centers[currentStation],
                travelMode: google.maps.DirectionsTravelMode.WALKING
            };
          
            var rendererOptions = {
                preserveViewport: true,
                suppressMarkers:true,
                routeIndex: currentIndex
            };


            directionsService.route(request, function(response,status){
              if (status == google.maps.DirectionsStatus.OK){
                var polylineOptionsActual = new google.maps.Polyline({
                  strokeColor: 'blue',
                  strokeOpacity: cellInfo[currentStation][currentIndex][1],
                  strokeWeight: 2
                });

                
                directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
                directionsDisplay.setMap(map);
                directionsDisplay.setOptions({polylineOptions: polylineOptionsActual});
                directionsDisplay.setDirections(response);

                currentIndex++;
              } else {

                console.log("STATUS=" + status);
              }
            });
            
            if (currentIndex == cellInfo[currentStation].length && sIndex ==3){
              console.log("done!");
            } else {
              
              caller();
            }
      }




      // var cellCenter;

      // //console.log("s size"  + selected[3].lat);

      // for (var p =0; p < selected.length ; p++){

      //       var point = selected[p];
      //       var pointCenter = new google.maps.LatLng(point.lat, point.lng);
      //       var dim = Math.round(point.count);
      //       var half_width = dim/2;
      //       var half_height = dim/2;
      //       var cellwidth = point.count/4;
      //       var distFromCenter = Math.sqrt(Math.pow(half_width*cellwidth,2) + Math.pow(half_height*cellwidth, 2));
      //       NW = google.maps.geometry.spherical.computeOffset(pointCenter, distFromCenter,315);
      //       NS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,90);
      //       SS = google.maps.geometry.spherical.computeOffset(NW,cellwidth,180);
      //       console.log("point  = " + p);
      //       console.log("dim = " + Math.round(point.count/10));

      //           for(var i=0; i < Math.round(point.count/10); i++){
              
      //           NE = google.maps.geometry.spherical.computeOffset(NS,i*cellwidth,180)
      //           SW = google.maps.geometry.spherical.computeOffset(SS,i*cellwidth,180)

      //                 for(var j=0; j < Math.round(point.count/10) ; j++){
                        
      //                   cellCenter = google.maps.geometry.spherical.computeOffset(NE,(Math.sqrt(2) *cellwidth)/2, 225);
                        
      //                   drawCircle(cellCenter);
      //                   //console.log("call to draw " +  i + " " + j);

      //                   var SW = google.maps.geometry.spherical.computeOffset(SW,cellwidth,90)
      //                   var NE = google.maps.geometry.spherical.computeOffset(NE,cellwidth,90)
      //                 }
      //         }
        
      // }

      // var circle3Options;
      // var gridCircles;
      // function drawCircle(){
      //   var circle3Options = {
      //         strokeColor: 'black',
      //         strokeOpacity: 0.8,
      //         strokeWeight: 2,
      //         fillColor: 'black',
      //         fillOpacity: 0.35,
      //         map: map,
      //         center: cellCenter,
      //         radius: 5
      //       }
      //       gridCircles= new google.maps.Circle(circle3Options);

      // }

}


google.maps.event.addDomListener(window, 'load', initialize);



</script>



</head>


<body>
  <h1 align="center"> Population Weighted Routes </h1>
  <div id="map_canvas" style="width:100%; height:2000px;"></div>